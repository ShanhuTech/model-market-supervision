"use strict";

class AccountSecurity {
  /**
   * 检查登入状态
   */
  static checkLoginStatus() {
    ////////////////////////////////////////////////////////////////////////////
    // 如果没有账户名称跳转至登陆页面
    ////////////////////////////////////////////////////////////////////////////
    if (null === LocalStorage.getItem("account_name")) {
      AccountSecurity.logoff();
      return;
    }
    ////////////////////////////////////////////////////////////////////////////
    // 先执行一次后面再定时循环判断
    ////////////////////////////////////////////////////////////////////////////
    function check() {
      //////////////////////////////////////////////////////////////////////////
      // 如果当前时间晚于账户过期时间跳转至登陆页面
      //////////////////////////////////////////////////////////////////////////
      const tokenExpiresTimestamp = LocalStorage.getItem("token_expires_timestamp");
      if (null !== tokenExpiresTimestamp) {
        const currentDate = new Date().getTime();
        if (0 >= (tokenExpiresTimestamp - currentDate)) {
          window.location.href = "../login/login.html";
        }
      } else {
        window.location.href = "../login/login.html";
      }
    }
    ////////////////////////////////////////////////////////////////////////////
    // 执行一次
    ////////////////////////////////////////////////////////////////////////////
    check();
    ////////////////////////////////////////////////////////////////////////////
    // 定时循环判断
    ////////////////////////////////////////////////////////////////////////////
    setInterval(check, 1000 * 10/* 3秒钟执行一次 */);
  }

  /**
   * 刷新管理员令牌
   * @param {function} callback 回调方法
   */
  static refreshAdminToken(callback) {
    ////////////////////////////////////////////////////////////////////////////
    // 检查回调方法
    ////////////////////////////////////////////////////////////////////////////
    if ((null !== callback) && (!Toolkit.equalsIgnoreCase("function", typeof(callback)))) {
      throw new Error("Invalid Callback");
    }
    ////////////////////////////////////////////////////////////////////////////
    // 刷新管理员令牌
    ////////////////////////////////////////////////////////////////////////////
    Network.request(Network.RequestType.POST, `${Configure.getServerUrl()}/module/security.Admin/refreshAdminToken`, null, null,
      function success(data, source) {
        const responseResult = data;
        if (Toolkit.equalsIgnoreCase("success", responseResult.status)) {
          //////////////////////////////////////////////////////////////////////
          // 存储用户信息
          //////////////////////////////////////////////////////////////////////
          const account = responseResult.content;
          LocalStorage.setItem("account_token", account.token);
          LocalStorage.setItem("token_expires_timestamp", account.token_expires_timestamp);
          if (null !== callback) {
            callback();
          }
        } else {
          Toast.show(Toast.Type.ERROR/* 类型 */, Toast.Position.MIDDLE_CENTER/* 位置 */, "错误"/* 标题 */, responseResult.attach/* 内容 */);
        }
      },
      function error(error, source) {
        Toast.show(Toast.Type.ERROR/* 类型 */, Toast.Position.MIDDLE_CENTER/* 位置 */, "错误"/* 标题 */, error.toString()/* 内容 */);
      }
    );
  }

  /**
   * 刷新Token
   */
  static refreshToken() {
    ////////////////////////////////////////////////////////////////////////////
    // 执行一次
    ////////////////////////////////////////////////////////////////////////////
    AccountSecurity.refreshAdminToken(null);
    ////////////////////////////////////////////////////////////////////////////
    // 定时循环刷新
    ////////////////////////////////////////////////////////////////////////////
    setInterval(AccountSecurity.refreshAdminToken, 1000 * 60 * 1/* 1分钟执行一次 */, null/*refreshAdminToken参数*/);
  }

  /**
   * 登出
   */
  static logoff() {
    ////////////////////////////////////////////////////////////////////////////
    // 清空存储项
    ////////////////////////////////////////////////////////////////////////////
    LocalStorage.clearItem();
    ////////////////////////////////////////////////////////////////////////////
    // 跳转至首页
    ////////////////////////////////////////////////////////////////////////////
    window.location.href = "../login/login.html";
  }
}
